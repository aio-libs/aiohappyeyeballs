name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - uses: pre-commit/action@v3.0.1

  # Make sure commit messages follow the conventional commits convention:
  # https://www.conventionalcommits.org
  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v6.2.1

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        exclude:
          - os: macOS-latest
            python-version: "3.8.0"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: snok/install-poetry@v1.4.1
      - name: Install Dependencies
        run: poetry install
        shell: bash
      - name: Test with Pytest
        run: poetry run pytest --cov-report=xml
        shell: bash
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test_release:
    needs:
      - test
      - lint
      - commitlint

    runs-on: ubuntu-latest
    environment: test_release
    concurrency: release
    if: github.ref_name != 'main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      # Dry run of PSR to build the distribution
      - name: Test release
        uses: python-semantic-release/python-semantic-release@v9.18.0
        with:
          root_options: --noop

      - uses: snok/install-poetry@v1.4.1
      - name: Install Dependencies
        run: poetry install --only main,test_build
        shell: bash

      - name: Test build of distribution packages
        shell: bash
        run: |
          poetry build
          poetry run python -Im twine check --strict dist/*

  build_release:
    needs:
      - test
      - lint
      - commitlint

    if: github.ref_name == 'main' && !startsWith(github.event.pull_request.title,'chore') && !startsWith(github.event.head_commit.message,'chore')

    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.release.outputs.released }}

    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      # On main branch: Call PSR to build the distribution
      - name: Release
        uses: python-semantic-release/python-semantic-release@v9.18.0
        id: release

        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  release:
    needs:
      - build_release

    if: needs.build_release.outputs.released == 'true'
    runs-on: ubuntu-latest
    environment: pypi
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@v9.8.9
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
